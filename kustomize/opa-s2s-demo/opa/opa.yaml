---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: opa-s2s
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opa-policy
data:
  policy.rego: |
    package demo.authz

    default allow = false

    # username and password database
    user_passwords = {
        "alice": "password",
        "bob": "password"
    }

    allow = response {
        # check if password from header is same as in database for the specific user
        basic_auth.password == user_passwords[basic_auth.user_name]
        response := {
          "allowed": true,
          "headers": {"x-user": basic_auth.user_name}
        }
    }

    basic_auth := {"user_name": user_name, "password": password} {
        v := input.attributes.request.http.headers.authorization
        startswith(v, "Basic ")
        s := substring(v, count("Basic "), -1)
        [user_name, password] := split(base64url.decode(s), ":")
    }
---
apiVersion: v1
kind: Service
metadata:
  name: opa
  labels:
    app: opa
spec:
  ports:
  - name: grpc
    port: 9191
    targetPort: 9191
  selector:
    app: opa
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: opa
  labels:
    app: opa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      labels:
        app: opa
    spec:
      containers:
        - name: opa
          image: openpolicyagent/opa:latest-envoy
          securityContext:
            runAsUser: 1111
          volumeMounts:
          - readOnly: true
            mountPath: /policy
            name: opa-policy
          args:
          - "run"
          - "--server"
          - "--addr=localhost:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
          - "--set=plugins.envoy_ext_authz_grpc.addr=:9191"
          - "--set=plugins.envoy_ext_authz_grpc.query=data.envoy.authz.allow"
          - "--set=decision_logs.console=true"
          - "--ignore=.*"
          - "/policy/policy.rego"
          ports:
          - containerPort: 9191
          livenessProbe:
            httpGet:
              path: /health?plugins
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health?plugins
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: proxy-config
          configMap:
            name: proxy-config
        - name: opa-policy
          configMap:
            name: opa-policy